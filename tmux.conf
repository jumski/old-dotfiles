set -g prefix C-q

unbind C-b

unbind r
bind r source-file ~/.tmux.conf

setw -g mode-keys vi

bind -n C-g send-prefix

########################## mappings

# select windows
bind-key -n M-1 select-window -t:1
bind-key -n M-2 select-window -t:2
bind-key -n M-3 select-window -t:3
bind-key -n M-4 select-window -t:4
bind-key -n M-5 select-window -t:5
bind-key -n M-6 select-window -t:6
bind-key -n M-7 select-window -t:7

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# splits and navigation
bind C-q last-window
bind q last-window
bind -n M-\; last-window
bind -n M-\ split-window -h
bind -n M-- split-window -v
bind -n M-= select-layout even-horizontal
bind -n M-+ select-layout even-vertical
bind -n M-n next-window
bind -n M-p previous-window

# pane resizing
bind-key -r    M-k resize-pane -U
bind-key -r  M-j resize-pane -D
bind-key -r  M-h resize-pane -L
bind-key -r M-l resize-pane -R

# copy/paste
bind-key -n M-PPage copy-mode -u
bind-key -n M-u copy-mode
bind-key -n M-i paste-buffer
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "xclip -sel clipboard"
unbind p
bind-key p run-shell "xclip -o | tmux load-buffer - ; tmux paste-buffer"

# shortcuts
bind-key -n M-q kill-pane
bind-key -n M-c new-window
bind-key -n M-r refresh-client -S

# switch sessions
bind-key -n M-0 choose-session
bind-key -n M-8 switch-client -p
bind-key -n M-9 switch-client -n

########################## configuration

# set escape time to 0
set -s escape-time 0

# count windows from 1 instead of 0
set -g base-index 1

# count panes from 1 instead of 0
set -g pane-base-index 1

# resize window to smallest client only if actively using window
setw -g aggressive-resize on

set -g detach-on-destroy off

setw -g automatic-rename off

# instructs tmux to expect UTF-8 sequences
setw -g utf8 on
#sets -g utf8 on

# pull/send panes
bind j command-prompt -p "join pane from:" "join-pane -h -s '%%'"
bind J command-prompt -p "join pane to:" "join-pane -h -t '%%'"
bind B break-pane -d -t :

# open a man page in new window
bind m command-prompt "split-window -h 'exec man %%'"

# open alsamixer
bind v split-window -l 14 -h 'alsamixer'

# toggle mocp
bind P run 'mocp -G'

# open htop
bind h split-window -v 'htop'

# open tail -f log/development.log
bind t split-window -l 120 -h 'tail -100f log/development.log'

# open tig
bind T split-window -h 'tig'

# open irb
bind I split-window -h 'irb'

# browse github repo
bind b command-prompt "run 'exec google-chrome https://github.com/%%'"

set -g status-utf8 on
set -g status-justify left
set -g status-bg colour240
set -g status-fg white
set -g status-interval 5
setw -g window-status-format "#[bg=colour236]#[fg=colour240]⮀#[fg=white]#[bg=colour236]#I#[bg=colour247]#[fg=colour236]⮀ #W#[bg=colour240]#[fg=colour247]⮀"
setw -g window-status-current-format "#[bg=white]#[fg=colour240]⮀#[fg=black]#[bg=white]#I#[fg=white]#[bg=colour236]⮀ #W#[bg=colour240]#[fg=colour236]⮀"
set-option -g status-right-length 120
set-option -g status-right "#(cat ~/.pomo_stat) #(~/.rvm/bin/current_ruby ~/work/tmux_status/bin/tmux-status music_player,date_time,transfer,battery,temperature)"

# history
set -g history-limit 10000
